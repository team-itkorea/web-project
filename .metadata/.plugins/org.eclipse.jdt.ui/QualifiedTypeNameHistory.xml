<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.example.practice.dto.UseremailCheckReqDto"/>
    <fullyQualifiedTypeName name="java.lang.EnumConstantNotPresentException"/>
    <fullyQualifiedTypeName name="com.example.practice.dto.UpdateUserReqDto"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="com.example.practice.service.QnaService"/>
    <fullyQualifiedTypeName name="com.example.practice.dto.QnaRespDto"/>
    <fullyQualifiedTypeName name="com.example.practice.dto.CMRespDto"/>
    <fullyQualifiedTypeName name="org.apache.ibatis.annotations.Mapper"/>
    <fullyQualifiedTypeName name="com.example.practice.user.Qna"/>
    <fullyQualifiedTypeName name="com.example.practice.user.QnaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpSession"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.userinfo.DefaultOAuth2UserService"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.registration.ClientRegistration"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.OAuth2AuthenticationException"/>
    <fullyQualifiedTypeName name="com.example.practice.auth.PrincipalDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.user.OAuth2User"/>
    <fullyQualifiedTypeName name="com.example.practice.auth.PrincipalOauth2UserService"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.handler.UserRoleAuthorizationInterceptor"/>
    <fullyQualifiedTypeName name="com.example.practice.user.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.validation.BindingResult"/>
    <fullyQualifiedTypeName name="com.example.practice.dto.ResetPassword"/>
    <fullyQualifiedTypeName name="com.example.practice.user.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.hibernate.query.criteria.internal.expression.AbstractTupleElement"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
</qualifiedTypeNameHistroy>
